{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","language","displayName","value","onChange","react_default","a","createElement","className","concat","onClick","type","index_es","icon","faCompressAlt","faExpandAlt","react_codemirror2","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","javascript","setJavascript","_useLocalStorage7","_useLocalStorage8","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","components_Editor","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a1f2e555.chunk.js","sourcesContent":["import React , { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport {Controlled as ControlEditor} from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt , faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Editor(props) {\r\n    const [open , setOpen] = useState(true) ; \r\n    const {\r\n        language , \r\n        displayName ,\r\n        value , \r\n        onChange , \r\n    } = props ; \r\n\r\n    function handleChange(editor , data , value){\r\n        onChange(value) ; \r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button onClick={()=>setOpen(!open)} type=\"button\" className=\"btn\"> <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} /></button>\r\n            </div>\r\n            <ControlEditor \r\n                onBeforeChange={handleChange}\r\n                value={value} \r\n                className=\"codemirror-wrapper\"\r\n                options={{\r\n                    lineWrapping : true , \r\n                    lint : true , \r\n                    mode : language , \r\n                    theme : 'material' , \r\n                    lineNumbers : true\r\n                }}\r\n            ></ControlEditor>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import { useEffect , useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nfunction useLocalStorage(key , initialValue) {\r\n    const prefixedKey = PREFIX + key ; \r\n    const [value ,setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey) ; \r\n\r\n        if(jsonValue!==null)    return JSON.parse(jsonValue) ; \r\n        if(typeof initialValue === 'function'){\r\n            return initialValue() ; \r\n        }else{\r\n            return initialValue ; \r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey , JSON.stringify(value)) ; \r\n    } , [value , key])\r\n    return [value , setValue] ;\r\n}\r\n\r\nexport default useLocalStorage\r\n","import './App.css' ;\nimport Editor from './Editor' ;\nimport React , {  useEffect } from 'react' ;\nimport useLocalStorage from '../hooks/useLocalStorage' ;\n\nfunction App() {\n  const [html , setHtml] = useLocalStorage('html' , '') ; \n  const [css , setCss] = useLocalStorage('css' , '') ;\n  const [javascript , setJavascript] = useLocalStorage('javascript' , '') ;\n  const [srcDoc , setSrcDoc] = useLocalStorage('srcDoc' , '') ;\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n        setSrcDoc(`\n          <html>\n            <body>${html}</body>\n            <style>${css}</style>\n            <script>${javascript}</script>\n          </html>\n      `)\n    } , 250) ;\n    return () => clearTimeout(timeout) ; \n  } , [html , css , javascript])\n\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n\n        <Editor \n          language=\"xml\" \n          displayName=\"HTML\" \n          value={html}\n          onChange={setHtml}\n        />\n        <Editor \n          language=\"css\" \n          displayName=\"CSS\" \n          value={css}\n          onChange={setCss}\n        />\n        <Editor \n          language=\"javascript\" \n          displayName=\"JavaScript\" \n          value={javascript}\n          onChange={setJavascript}\n        />\n\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n          />  \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}